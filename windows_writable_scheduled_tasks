# Cleanup temporary files:
del initial_output.txt
del icacls_output.txt

# Generate output for all of the scheduled tasks:
schtasks /query /fo LIST /v > input.txt

# Create a file with all the scheduled task executable paths:
# Define the path to the input text file
$inputFilePath = "input.txt"
$outputFilePath = "initial_output.txt"

# Read the contents of the file
$fileContents = Get-Content -Path $inputFilePath

# Initialize an empty list to hold the executable paths
$executablePaths = @()

# Iterate over each line in the file contents
foreach ($line in $fileContents) {
    # Check if the line contains a task execution path
    if ($line -match "Task To Run:\s*(.+)") {
        # Extract the execution path
        $executionPath = $matches[1].Trim()

        # Resolve environment variables
        $executionPath = [System.Environment]::ExpandEnvironmentVariables($executionPath)
        
        # Exclude command-line arguments (simple approach, consider edge cases)
        $executionPath = ($executionPath -split ' ')[0]

        # Exclude non-file path entries like "COM handler" and check for valid file paths
        if ($executionPath -notmatch "^COM" -and $executionPath -ne $null -and $executionPath -ne "" -and (Test-Path $executionPath)) {
            # Add the cleaned and resolved execution path to the list
            $executablePaths += $executionPath
        }
    }
}

# Save the list of executable paths to the output file
$executablePaths | Out-File -FilePath $outputFilePath


# Create a file with the icacls command for all scheduled task executable paths:

# Define the path to the input file with paths and the output file for the icacls results
$inputFilePath1 = "initial_output.txt"
$outputFilePath1 = "icacls_output.txt"

# Read the paths from the input file
$paths = Get-Content -Path $inputFilePath1

# Iterate over each path and run icacls, appending the results to the output file
foreach ($path in $paths) {
    icacls $path | Out-File -FilePath $outputFilePath1 -Append
}


# Run this script (to get the scheduled task executable paths that are executable by the current user)
# Get the current user name
$currentUsername = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name

# Output the current user in the terminal
Write-Host "Current user: $currentUsername"

# Define the path to the file containing the icacls output
$icaclsOutputPath = "icacls_output.txt"

# Read the contents of the file
$icaclsOutput = Get-Content -Path $icaclsOutputPath

# Initialize a switch to check if the current user's permissions are being listed
$checkPermissions = $false

# Go through each line in the output file
foreach ($line in $icaclsOutput) {
    # Check if the line contains a file path and reset the permissions check
    if ($line -match "^[A-Za-z]:\\") {
        $currentFilePath = $line
        $checkPermissions = $true
    }

    # If checking permissions and the line contains the current user with (M) or (F) permissions, output the file path
    if ($checkPermissions -and $line -like "*$currentUsername*") {
        if ($line -match "\([MF]\)") {
            Write-Host $currentFilePath
            # Reset the check as we only print the file path once for each user's (M)odify or (F)ull control permission
            $checkPermissions = $false
        }
    }
}
